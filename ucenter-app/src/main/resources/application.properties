server.port = 8086
spring.profiles.active = local
system.application = UCENTER
system.label = DEV
spring.application.name = ${system.application}-${system.label}
logback.path = /opt/logs/

# 数据库配置
spring.datasource.druid.url = jdbc:mysql://10.75.43.5:4305/grbnmpcs?allowMultiQueries=true&rewriteBatchedStatements=true
spring.datasource.druid.username = gr_rootdev
spring.datasource.druid.password = Rzxlszy1949
# spring.datasource.druid.publickey = MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAL3wXtO87lwPWFL3L/+xHWvgG/mXs2oqyNeANPQQXEXV3AOSCLT3uAVl/B2NxAPBiZmlNHznN0FKoNPEchhJJBkCAwEAAQ==
spring.datasource.druid.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.druid.type = com.alibaba.druid.pool.DruidDataSource
# spring.datasource.druid.connection-properties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=true;config.decrypt.key=${spring.datasource.druid.publickey}
spring.datasource.druid.validation-query = SELECT 1
spring.datasource.druid.initial-size = 10
spring.datasource.druid.min-idle = 10
spring.datasource.druid.max-active = 50
spring.datasource.druid.max-wait = 60000
spring.datasource.druid.time-between-eviction-runs-millis = 60000
spring.datasource.druid.min-evictable-idle-time-millis = 300000
spring.datasource.druid.test-while-idle = true
spring.datasource.druid.test-on-return = false
spring.datasource.druid.test-on-borrow = false
spring.datasource.druid.pool-prepared-statements = true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size = 20
spring.datasource.druid.initialSize = 10
spring.datasource.druid.use-global-data-source-stat = true
spring.datasource.druid.aop-patterns = com.pcic.*
spring.datasource.druid.web-stat-filter.enabled = true
spring.datasource.druid.web-stat-filter.url-pattern = /*
spring.datasource.druid.web-stat-filter.session-stat-max-count = 1000
spring.datasource.druid.web-stat-filter.profile-enable = true
spring.datasource.druid.web-stat-filter.exclusions = /static/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.principal-session-name = loginUser
spring.datasource.druid.stat-view-servlet.enabled = true
spring.datasource.druid.stat-view-servlet.url-pattern = /druid/*
spring.datasource.druid.stat-view-servlet.reset-enable = false
spring.datasource.druid.stat-view-servlet.login-password = admin
spring.datasource.druid.stat-view-servlet.login-username = admin
spring.datasource.druid.filters = wall,stat,config
# 慢SQL输出
spring.datasource.druid.filter.config.enabled = true
spring.datasource.druid.filter.stat.merge-sql = true
spring.datasource.druid.filter.stat.log-slow-sql = true
spring.datasource.druid.filter.stat.slow-sql-millis = 5000
spring.datasource.druid.filter.wall.config.multi-statement-allow = true


# MybatisPlus
mybatis-plus.type-aliases-package = com.pcic.**.dto
mybatis-plus.mapper-locations = classpath:mapper/**/*Mapper.xml
mybatis-plus.configuration.jdbc-type-for-null = null
mybatis-plus.global-config.banner = false
# 启用逻辑删除
# mybatis-plus.global-config.db-config.logic-delete-field = invalidFlag
# mybatis-plus.global-config.db-config.logic-delete-value = 1
# mybatis-plus.global-config.db-config.logic-not-delete-value = 0
# 不用MybatisPlus的SQL打印，使用local环境的Logback的DEBUG打印SQL
# mybatis-plus.configuration.log-impl = org.apache.ibatis.logging.stdout.StdOutImpl

# Redis配置
spring.redis.host = 10.75.41.123
spring.redis.port = 6379
spring.redis.password =
spring.redis.database = 1
# spring.redis.cluster.nodes = 10.75.42.101:7001,10.75.42.101:7002,10.75.42.101:7003,10.75.42.103:7001,10.75.42.103:7002,10.75.42.103:7003
# spring.redis.password = guoren@uat
spring.redis.lettuce.pool.max-active = 50
spring.redis.lettuce.pool.max-idle = 20
spring.redis.timeout = 5000
spring.redis.pool.max-idle = 20
spring.redis.pool.min-idle = 0
spring.redis.pool.max-active = 50
spring.redis.pool.max-wait = -1

# MQ配置
spring.rabbitmq.host = 10.75.41.123
spring.rabbitmq.port = 5672
spring.rabbitmq.username = mymq
spring.rabbitmq.password = mq#123
spring.rabbitmq.virtual-host = dev
spring.rabbitmq.publisher-confirm-type = correlated
spring.rabbitmq.publisher-returns = true
spring.rabbitmq.listener.simple.acknowledge-mode = manual
spring.rabbitmq.listener.direct.acknowledge-mode = manual

# 注册中心配置
eureka.client.service-url.defaultZone = http://10.75.56.10:9761/eureka/
eureka.client.fetch-registry = true
eureka.client.healthcheck.enabled = true
eureka.instance.instance-id = ${spring.cloud.client.ip-address}:${server.port}
eureka.instance.prefer-ip-address = true
eureka.instance.lease-renewal-interval-in-seconds = 5
eureka.instance.lease-expiration-duration-in-seconds = 15
management.endpoints.health.show-details = always
management.endpoints.web.exposure.include = *
management.security.enabled = false
management.port = 12143

# Feign配置
feign.hystrix.enabled = true
# 开启okhttp
feign.okhttp.enabled = true
# 关闭httpclient
feign.httpclient.enabled = false
# 连接超时，10秒
feign.client.config.default.connectTimeout = 120000
# 读取超时，20秒
feign.client.config.default.readTimeout = 120000
# 负载
ribbon.MaxAutoRetries = 0
ribbon.MaxAutoRetriesNextServer = 0
ribbon.ConnectTimeout = 120000
ribbon.ReadTimeout = 120000
# 请求处理的超时
hystrix.command.default.execution.timeout.enabled = true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 120000
# 请求线程池线程数
hystrix.threadpool.default.coreSize = 200
# 回退最大线程数
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests = 100
# 熔断器失败的个数==进入熔断器的请求达到1000时服务降级（之后的请求直接进入熔断器）
hystrix.command.default.circuitBreaker.requestVolumeThreshold = 1000

# Sleuth
spring.sleuth.sampler.probability = 1
